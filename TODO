TODO: 

- Calculate fps
	- Requirements: 1 million at 60FPS, 3 million at 20FPS
		- Have two versions
	✔ Display on screen or in window title
	✔ update only when minimum time has passed
	- improve deltatime effect on particles when low fps;
- init multiple particles:
	✔ init list of particles as cube
	✔ init list of particles as sphere
		✔ improve generation
	- init list of particles as (Bonus...)
	✔ init with arg
- Camera:
	✔ Move camera around: forward, backward, rotate left, right, up, down. (Based on current position and orientation)
	- add gradual increase in speed for movement and for rotation
✔ Pause (P)
✔ Graviational center:
	✔ Move graviational center with cursor
	✔ Hold graviational center position (L/click)
	✔ Have multiple graviational centers
		✔ Tab to switch between graviational centers
		✔ N: new center
	✔ find good balance between constant force, gravity and friction
	✔ control cursor depth with mouse wheel
✔ Color:
	✔ Color particles based on distance to gravity centers
- Skybox
- GUI
✔ Reset
	✔ switch between different setups (sphere, cube) and pause
- Add particles in real time
- Temporary particles

Controls:
- wasd: Cam rotation
- up, down, left, right: Cam movement
- P: Pause
- Tab: next Force center
- L: lock Force center (or mouse click)
- N: new Force center


Notes:

glMapBuffer to map pointer and be able to access and modify values in the GPU from the CPU

To execute openCL kernel:
	clEnqueueAcquireGLObjects
	clEnqueueNDRangeKernel
	clEnqueueReleaseGLObjects
